apiVersion: apps/v1
kind: Deployment
metadata:
  name: appointment-bot-app
  namespace: appointment-bot
  labels:
    app: appointment-bot
    component: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: appointment-bot
      component: app
  template:
    metadata:
      labels:
        app: appointment-bot
        component: app
    spec:
      containers:
      - name: app
        image: ghcr.io/your-username/appointment-bot:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: PORT
          value: "8000"
        envFrom:
        - configMapRef:
            name: appointment-bot-config
        - secretRef:
            name: appointment-bot-secrets
        - secretRef:
            name: appointment-bot-db-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      securityContext:
        fsGroup: 1000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appointment-bot-worker
  namespace: appointment-bot
  labels:
    app: appointment-bot
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: appointment-bot
      component: worker
  template:
    metadata:
      labels:
        app: appointment-bot
        component: worker
    spec:
      containers:
      - name: worker
        image: ghcr.io/your-username/appointment-bot:latest
        command: ["celery"]
        args: ["-A", "app.core.celery", "worker", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: appointment-bot-config
        - secretRef:
            name: appointment-bot-secrets
        - secretRef:
            name: appointment-bot-db-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      securityContext:
        fsGroup: 1000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appointment-bot-flower
  namespace: appointment-bot
  labels:
    app: appointment-bot
    component: flower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appointment-bot
      component: flower
  template:
    metadata:
      labels:
        app: appointment-bot
        component: flower
    spec:
      containers:
      - name: flower
        image: ghcr.io/your-username/appointment-bot:latest
        command: ["celery"]
        args: ["-A", "app.core.celery", "flower", "--port=5555"]
        ports:
        - containerPort: 5555
          name: flower
        envFrom:
        - configMapRef:
            name: appointment-bot-config
        - secretRef:
            name: appointment-bot-secrets
        - secretRef:
            name: appointment-bot-db-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      securityContext:
        fsGroup: 1000