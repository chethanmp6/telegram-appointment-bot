# Development-focused Docker Compose
# Use this for local development with external app server
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: appointment_postgres_dev
    environment:
      POSTGRES_DB: appointment_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - appointment_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.13-community
    container_name: appointment_neo4j_dev
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_memory_heap_initial__size: 256m
      NEO4J_dbms_memory_heap_max__size: 512m
    volumes:
      - neo4j_dev_data:/data
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    networks:
      - appointment_dev_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: appointment_redis_dev
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    networks:
      - appointment_dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ChromaDB (Vector Database)
  chromadb:
    image: chromadb/chroma:latest
    container_name: appointment_chromadb_dev
    environment:
      CHROMA_SERVER_HOST: 0.0.0.0
      CHROMA_SERVER_HTTP_PORT: 8000
    volumes:
      - chromadb_dev_data:/chroma/chroma
    ports:
      - "8001:8000"
    networks:
      - appointment_dev_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: PostgreSQL Admin Interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: appointment_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - appointment_dev_network
    depends_on:
      - postgres
    profiles:
      - admin

  # Optional: Redis Admin Interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: appointment_redis_commander_dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - appointment_dev_network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  postgres_dev_data:
  neo4j_dev_data:
  redis_dev_data:
  chromadb_dev_data:

networks:
  appointment_dev_network:
    driver: bridge
    name: appointment_dev_network